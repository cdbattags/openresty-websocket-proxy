worker_processes  1;

error_log  /var/log/nginx/amp-projections.error.log debug;

events {
    worker_connections 1024;
}

http {
    lua_need_request_body on;

    log_format amplify '$remote_addr [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" $request_time $upstream_response_time "$http_x_forwarded_for" "$ssl_server_name" "$ssl_session_id" "$ssl_session_reused" $http_x_api_client $http_x_amplify_serial';

    # log_format log_req_resp '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" $request_time req_header:"$req_header" req_body:"$request_body" resp_header:"$resp_header" resp_body:"$resp_body"';

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
 
    upstream websocket {
        server 127.0.0.1:9300;
    }
 
    server {
        listen 80;
        listen 443 default_server ssl;
        access_log /var/log/nginx/amp-projections.access.log amplify;
        server_name local.amp.com

        ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
        ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

        ssl on;
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 10m;
        ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;

        # Redirect all non-SSL traffic to SSL.
        if ($ssl_protocol = "") {
            rewrite ^ https://$host$request_uri? permanent;
        }

        location / {
            proxy_pass http://websocket;
            proxy_ssl_server_name on;
            proxy_ssl_name "127.0.0.1";
        }
        
        location /ws/ {
            proxy_pass http://websocket/ws/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_ssl_server_name on;
            proxy_ssl_name "127.0.0.1";
        }
    }
}
